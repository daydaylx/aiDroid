name: Build Android APK (stable)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-android-apk:
    name: "📱 Build APK with Buildozer"
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🧰 Install System Dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git zip unzip openjdk-17-jdk python3-pip \
            build-essential libstdc++6 \
            libffi-dev libssl-dev libsqlite3-dev zlib1g-dev

      - name: 🧠 Add Swap to avoid OOM Kill (4 GB)
        run: |
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      - name: 🔗 Install missing libncurses5/libtinfo5 dependencies
        run: |
          curl -O http://launchpadlibrarian.net/648013231/libtinfo5_6.4-2_amd64.deb
          sudo dpkg -i libtinfo5_6.4-2_amd64.deb
          rm libtinfo5_6.4-2_amd64.deb

          curl -O http://launchpadlibrarian.net/648013227/libncurses5_6.4-2_amd64.deb
          sudo dpkg -i libncurses5_6.4-2_amd64.deb
          rm libncurses5_6.4-2_amd64.deb

      - name: 🐍 Install Python Tools
        run: |
          python3 -m pip install --upgrade pip
          pip install Cython buildozer

      - name: 💾 Restore Buildozer/Android/Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            .buildozer
            ~/.buildozer
            ~/.android
            ~/.gradle
          key: buildozer-cache-v1-${{ runner.os }}-${{ hashFiles('**/buildozer.spec') }}

      - name: ✅ Accept Android SDK Licenses
        run: |
          # Nur ausführen, wenn SDK bereits existiert
          if [ -d "$HOME/.buildozer/android/platform/android-sdk" ]; then
            yes | $HOME/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager --licenses || true
          fi

      - name: 🛠️ Build APK (verbose)
        run: |
          buildozer -v android debug

      - name: 🧪 Check for APK Existence
        run: |
          test -f bin/*.apk || (echo '❌ APK not found!' && exit 1)

      - name: 📤 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: aiDroid-debug.apk
          path: bin/*.apk

      - name: 🪵 Upload Build Logs (bei Fehlern immer!)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            .buildozer/
            bin/