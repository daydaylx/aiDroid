name: Build Android APK - Stable

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 120
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🧹 Free Disk Space
      run: |
        echo "Freeing up disk space..."
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        echo "Available disk space:"
        df -h
        
    - name: 🎨 Create Required Assets
      run: |
        echo "Installing ImageMagick..."
        sudo apt-get update
        sudo apt-get install -y imagemagick
        
        echo "Creating icon.png (512x512)..."
        convert -size 512x512 xc:'#2196F3' \
                -fill white -pointsize 80 -gravity center \
                -annotate +0+0 'AI' \
                icon.png
                
        echo "Creating presplash.png (1080x1920)..."
        convert -size 1080x1920 xc:'#1565C0' \
                -fill white -pointsize 120 -gravity center \
                -annotate +0-200 'aiDroid' \
                -pointsize 60 -annotate +0+100 'Samsung S25 Pro' \
                -pointsize 40 -annotate +0+300 'Loading...' \
                presplash.png
        
        echo "✅ Assets created successfully"
        echo "Files created:"
        ls -la *.png
        echo "File details:"
        file *.png

    - name: 🔨 Build APK with Buildozer
      uses: ArtemSBulgakov/buildozer-action@v1
      with:
        command: buildozer android debug
        buildozer_version: stable
      env:
        # Environment variables for build optimization
        GRADLE_OPTS: "-Xmx4096m -Dorg.gradle.daemon=false -Dorg.gradle.parallel=false"
        JAVA_OPTS: "-Xmx2048m"
        # Reduce memory usage
        BUILDOZER_LOG_LEVEL: 1
        
    - name: 📊 Build Results Analysis
      if: always()
      run: |
        echo "=== BUILD ANALYSIS ==="
        echo "Build Status: ${{ job.status }}"
        echo "Timestamp: $(date)"
        
        echo "=== APK FILES ==="
        if [ -d "bin" ]; then
          echo "APK files found:"
          ls -la bin/
          for apk in bin/*.apk; do
            if [ -f "$apk" ]; then
              echo "📱 APK: $apk"
              echo "📏 Size: $(du -h "$apk" | cut -f1)"
              echo "🔍 Type: $(file "$apk")"
            fi
          done
        else
          echo "❌ No bin directory found"
        fi
        
        echo "=== CACHE INFO ==="
        if [ -d ".buildozer" ]; then
          echo "📦 Buildozer cache size: $(du -sh .buildozer 2>/dev/null || echo 'N/A')"
        fi
        
        echo "=== DISK SPACE ==="
        df -h
        
    - name: 📤 Upload APK Artifact
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: aiDroid-S25-APK-Build-${{ github.run_number }}
        path: bin/*.apk
        retention-days: 30
        
    - name: 📝 Upload Build Logs on Failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs-${{ github.run_number }}
        path: |
          .buildozer/
          *.log
        retention-days: 7

