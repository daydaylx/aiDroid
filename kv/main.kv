<CodeGenApp>:
    canvas.before:
        Color:
            rgba: 0.1, 0.1, 0.1, 1
        Rectangle:
            pos: self.pos
            size: self.size
    
    BoxLayout:
        orientation: "vertical"
        padding: dp(15)
        spacing: dp(10)
        
        # Header
        Label:
            text: "ü§ñ OpenRouter CodeGen"
            size_hint_y: None
            height: dp(40)
            font_size: sp(18)
            color: 1, 1, 1, 1
            bold: True
        
        # API Key Input (war gefehlt!)
        BoxLayout:
            orientation: "horizontal"
            size_hint_y: None
            height: dp(40)
            spacing: dp(10)
            
            TextInput:
                hint_text: "üîë OpenRouter API Key eingeben"
                text: app.api_key
                password: True
                multiline: False
                background_color: 0.2, 0.2, 0.2, 1
                foreground_color: 1, 1, 1, 1
                on_text: app.api_key = self.text
            
            Button:
                text: "üì° Modelle\nladen"
                size_hint_x: None
                width: dp(80)
                background_color: 0.2, 0.6, 0.2, 1
                color: 1, 1, 1, 1
                font_size: sp(10)
                on_release: app.load_models()
        
        # Model Selection
        BoxLayout:
            orientation: "horizontal"
            size_hint_y: None
            height: dp(40)
            spacing: dp(10)
            
            Label:
                text: "üéØ Modell:"
                size_hint_x: None
                width: dp(60)
                color: 0.8, 0.8, 0.8, 1
                font_size: sp(12)
            
            Spinner:
                id: model_spinner
                text: app.selected_model if app.selected_model else "Modell w√§hlen..."
                values: app.models
                background_color: 0.2, 0.2, 0.2, 1
                color: 1, 1, 1, 1
                font_size: sp(11)
                on_text: app.selected_model = self.text
        
        # System Prompt
        Label:
            text: "‚öôÔ∏è System Prompt:"
            size_hint_y: None
            height: dp(25)
            color: 0.8, 0.8, 0.8, 1
            font_size: sp(12)
            halign: "left"
            text_size: self.size
        
        TextInput:
            text: app.system_prompt
            size_hint_y: None
            height: dp(60)
            multiline: True
            background_color: 0.15, 0.15, 0.15, 1
            foreground_color: 0.9, 0.9, 0.9, 1
            font_size: sp(11)
            on_text: app.system_prompt = self.text
        
        # User Prompt
        Label:
            text: "üí≠ Dein Prompt:"
            size_hint_y: None
            height: dp(25)
            color: 0.8, 0.8, 0.8, 1
            font_size: sp(12)
            halign: "left"
            text_size: self.size
        
        TextInput:
            text: app.user_prompt
            multiline: True
            size_hint_y: None
            height: dp(100)
            hint_text: "Beschreibe hier, welchen Code du generieren m√∂chtest..."
            background_color: 0.2, 0.2, 0.2, 1
            foreground_color: 1, 1, 1, 1
            font_size: sp(12)
            on_text: app.user_prompt = self.text
        
        # Action Buttons
        BoxLayout:
            orientation: "horizontal"
            size_hint_y: None
            height: dp(50)
            spacing: dp(10)
            
            Button:
                text: "üîÑ L√∂schen"
                background_color: 0.6, 0.3, 0.3, 1
                color: 1, 1, 1, 1
                font_size: sp(12)
                disabled: app.is_loading
                on_release: app.clear_output()
            
            Button:
                text: "‚ú® Generieren" if not app.is_loading else "‚è≥ L√§dt..."
                background_color: 0.2, 0.6, 0.8, 1
                color: 1, 1, 1, 1
                font_size: sp(12)
                disabled: app.is_loading
                on_release: app.generate()
            
            Button:
                text: "üìã Kopieren"
                background_color: 0.3, 0.6, 0.3, 1
                color: 1, 1, 1, 1
                font_size: sp(12)
                disabled: app.is_loading
                on_release: app.copy_output()
        
        # Output
        Label:
            text: "üìÑ Generierter Code:"
            size_hint_y: None
            height: dp(25)
            color: 0.8, 0.8, 0.8, 1
            font_size: sp(12)
            halign: "left"
            text_size: self.size
        
        ScrollView:
            do_scroll_x: False
            
            TextInput:
                text: app.output_text
                readonly: True
                multiline: True
                background_color: 0.05, 0.05, 0.05, 1
                foreground_color: 0.9, 0.9, 0.9, 1
                font_name: "RobotoMono-Regular"
                font_size: sp(10)
                size_hint_y: None
                height: max(self.minimum_height, dp(200))
