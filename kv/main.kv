<CodeGenApp>:
    canvas.before:
        Color:
            rgba: 0.08, 0.08, 0.12, 1
        Rectangle:
            pos: self.pos
            size: self.size

    BoxLayout:
        orientation: "vertical"
        padding: dp(15)
        spacing: dp(10)

        BoxLayout:
            orientation: "vertical"
            size_hint_y: None
            height: dp(60)
            spacing: dp(5)

            Label:
                text: "ü§ñ OpenRouter CodeGen Pro"
                font_size: sp(18)
                color: 1, 1, 1, 1
                bold: True
                size_hint_y: None
                height: dp(30)

            BoxLayout:
                orientation: "horizontal"
                size_hint_y: None
                height: dp(25)

                Label:
                    text: app.status_text
                    font_size: sp(11)
                    color: 0.7, 0.9, 1, 1
                    halign: "left"
                    text_size: self.size

                Label:
                    text: ("üîÑ" if app.streaming_enabled else "üìÑ") + (" üß†" if app.memory_enabled else "")
                    font_size: sp(12)
                    color: 0.3, 1, 0.3, 1 if (app.streaming_enabled or app.memory_enabled) else 0.8, 0.8, 0.8, 1
                    size_hint_x: None
                    width: dp(50)

        BoxLayout:
            orientation: "horizontal"
            size_hint_y: None
            height: dp(40)
            spacing: dp(6)

            TextInput:
                hint_text: "üîë OpenRouter API Key"
                text: app.api_key
                password: True
                multiline: False
                background_color: 0.15, 0.15, 0.2, 1
                foreground_color: 1, 1, 1, 1
                cursor_color: 0.3, 0.7, 1, 1
                font_size: sp(10)
                on_text: app.api_key = self.text

            Button:
                text: "üì°"
                size_hint_x: None
                width: dp(35)
                background_color: 0.2, 0.6, 0.3, 1
                color: 1, 1, 1, 1
                font_size: sp(12)
                disabled: app.is_loading
                on_release: app.load_models_async()

            Button:
                text: "üîÑ"
                size_hint_x: None
                width: dp(35)
                background_color: 0.5, 0.5, 0.2, 1
                color: 1, 1, 1, 1
                font_size: sp(12)
                disabled: app.is_loading
                on_release: app.refresh_models()

        BoxLayout:
            orientation: "horizontal"
            size_hint_y: None
            height: dp(35)
            spacing: dp(6)

            Spinner:
                id: model_spinner
                text: app.selected_model if app.selected_model else "Modell..."
                values: app.models
                background_color: 0.2, 0.2, 0.25, 1
                color: 1, 1, 1, 1
                font_size: sp(9)
                on_text: app.selected_model = self.text if self.text != "Modell..." else ""

            Button:
                text: "üîÑ" if app.streaming_enabled else "üìÑ"
                size_hint_x: None
                width: dp(30)
                background_color: 0.3, 0.7, 0.3, 1 if app.streaming_enabled else 0.6, 0.6, 0.6, 1
                color: 1, 1, 1, 1
                font_size: sp(12)
                on_release: app.toggle_streaming()

            Button:
                text: "üß†"
                size_hint_x: None
                width: dp(30)
                background_color: 0.5, 0.3, 0.8, 1 if app.memory_enabled else 0.4, 0.4, 0.4, 1
                color: 1, 1, 1, 1
                font_size: sp(12)
                on_release: app.toggle_memory()

            Button:
                text: "üìã"
                size_hint_x: None
                width: dp(30)
                background_color: 0.3, 0.5, 0.7, 1
                color: 1, 1, 1, 1
                font_size: sp(12)
                on_release: app.show_memory_history()

        BoxLayout:
            orientation: "horizontal"
            size_hint_y: None
            height: dp(30) if app.memory_enabled else 0
            opacity: 1 if app.memory_enabled else 0
            spacing: dp(6)

            Label:
                text: "üìÅ"
                size_hint_x: None
                width: dp(25)
                color: 0.8, 0.8, 0.8, 1
                font_size: sp(12)

            TextInput:
                hint_text: "Projekt-Name (optional)"
                text: app.project_context
                multiline: False
                background_color: 0.12, 0.12, 0.16, 1
                foreground_color: 0.9, 0.9, 0.9, 1
                font_size: sp(10)
                on_text: app.project_context = self.text

        Label:
            text: "‚öôÔ∏è System:"
            size_hint_y: None
            height: dp(20)
            color: 0.8, 0.8, 0.8, 1
            font_size: sp(11)
            halign: "left"
            text_size: self.size

        TextInput:
            text: app.system_prompt
            size_hint_y: None
            height: dp(60)
            multiline: True
            background_color: 0.12, 0.12, 0.16, 1
            foreground_color: 0.9, 0.9, 0.9, 1
            font_size: sp(9)
            on_text: app.system_prompt = self.text

        Label:
            text: "üí≠ Prompt:"
            size_hint_y: None
            height: dp(20)
            color: 0.8, 0.8, 0.8, 1
            font_size: sp(11)
            halign: "left"
            text_size: self.size

        TextInput:
            text: app.user_prompt
            multiline: True
            size_hint_y: None
            height: dp(80)
            hint_text: "Beschreibe hier, welchen Code du generieren m√∂chtest..."
            background_color: 0.18, 0.18, 0.22, 1
            foreground_color: 1, 1, 1, 1
            font_size: sp(11)
            on_text: app.user_prompt = self.text

        BoxLayout:
            orientation: "horizontal"
            size_hint_y: None
            height: dp(45)
            spacing: dp(6)

            Button:
                text: "üóëÔ∏è"
                size_hint_x: None
                width: dp(40)
                background_color: 0.7, 0.3, 0.3, 1
                color: 1, 1, 1, 1
                font_size: sp(12)
                on_release: app.clear_all()

            Button:
                text: "‚èπÔ∏è" if (app.is_loading or app.is_streaming) else ("üîÑ" if app.streaming_enabled else "‚ú®")
                background_color: 0.8, 0.3, 0.3, 1 if (app.is_loading or app.is_streaming) else (0.2, 0.7, 0.8, 1 if app.streaming_enabled else 0.2, 0.6, 0.8, 1)
                color: 1, 1, 1, 1
                font_size: sp(12)
                on_release: app.stop_generation() if (app.is_loading or app.is_streaming) else app.generate_async()

            Button:
                text: "üìã"
                size_hint_x: None
                width: dp(40)
                background_color: 0.3, 0.6, 0.3, 1
                color: 1, 1, 1, 1
                font_size: sp(12)
                disabled: app.is_loading or app.is_streaming
                on_release: app.copy_output()

        ProgressBar:
            size_hint_y: None
            height: dp(3) if (app.is_loading or app.is_streaming) else 0
            opacity: 1 if (app.is_loading or app.is_streaming) else 0
            max: 1
            value: 0.5 if app.is_loading else 1

        Label:
            text: "üìÑ Code:" + (" (üß† + Kontext)" if app.memory_enabled else "") + (" (üîÑ Live)" if app.is_streaming else "")
            size_hint_y: None
            height: dp(20)
            color: 0.8, 0.8, 0.8, 1
            font_size: sp(10)
            halign: "left"
            text_size: self.size

        ScrollView:
            do_scroll_x: False

            TextInput:
                text: app.output_text
                readonly: True
                multiline: True
                background_color: 0.05, 0.05, 0.08, 1
                foreground_color: 0.95, 0.95, 0.95, 1
                font_size: sp(9)
                size_hint_y: None
                height: max(self.minimum_height, dp(200))
